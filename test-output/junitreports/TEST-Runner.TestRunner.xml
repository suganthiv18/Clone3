<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DCDDCD-G5CTLBT0" failures="0" tests="160" name="Runner.TestRunner" time="153.803" errors="3" timestamp="2023-10-08T13:16:30 EDT" skipped="0">
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.303"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.301"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.276"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.582"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.420"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.535"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.738"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.266"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.408"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.340"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.245"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.391"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.557"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.649"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.355"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.560"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.572"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.598"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.580"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.305"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.317"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="1.521"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="1.333"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.857"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.323"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.420"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.616"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.389"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.371"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.554"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.609"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.399"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.282"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.647"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.327"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.360"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.712"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.395"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.580"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.310"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.417"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.361"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.268"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.474"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.587"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.652"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.289"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.420"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.529"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.278"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.402"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.458"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.269"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.600"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.497"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.416"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.402"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.258"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.385"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.443"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.390"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.405"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.496"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.579"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.414"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.456"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.607"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.307"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.575"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.265"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.525"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.429"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.463"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.796"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.430"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.423"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.280"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.273"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.274"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.619"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.260"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.296"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="1.726"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="1.927"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.561"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.396"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.388"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.289"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.558"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.735"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="1.808"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.591"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.428"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.825"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.416"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.579"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.463"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.321"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.378"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.378"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.336"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.007">
    <error message="The step &#039;I want to write a step with name2&#039; and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given(&quot;I want to write a step with name2&quot;)
public void i_want_to_write_a_step_with_name2() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&quot;I check for the {int} in step&quot;)
public void i_check_for_the_in_step(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;I verify the Fail in step&quot;)
public void i_verify_the_fail_in_step() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.testng.UndefinedStepException">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'I want to write a step with name2' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("I want to write a step with name2")
public void i_want_to_write_a_step_with_name2() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I check for the {int} in step")
public void i_check_for_the_in_step(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("I verify the Fail in step")
public void i_verify_the_fail_in_step() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.392"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.563"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.486"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.605"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.294"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.563"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.273"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.570"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.757"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.596"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.572"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.376"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.313"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.564"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.588"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.451"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.412"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="1.832"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.513"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.568"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.269"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.563"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.497"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.463"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.319"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.299"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.041">
    <error message="The step &#039;I want to write a step with precondition&#039; and 6 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given(&quot;I want to write a step with precondition&quot;)
public void i_want_to_write_a_step_with_precondition() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given(&quot;some other precondition&quot;)
public void some_other_precondition() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&quot;I complete action&quot;)
public void i_complete_action() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&quot;some other action&quot;)
public void some_other_action() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&quot;yet another action&quot;)
public void yet_another_action() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;I validate the outcomes&quot;)
public void i_validate_the_outcomes() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;check more outcomes&quot;)
public void check_more_outcomes() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.testng.UndefinedStepException">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'I want to write a step with precondition' and 6 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("I want to write a step with precondition")
public void i_want_to_write_a_step_with_precondition() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Given("some other precondition")
public void some_other_precondition() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I complete action")
public void i_complete_action() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("some other action")
public void some_other_action() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("yet another action")
public void yet_another_action() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("I validate the outcomes")
public void i_validate_the_outcomes() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("check more outcomes")
public void check_more_outcomes() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.378"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.535"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.542"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.259"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.304"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.848"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.398"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.288"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.408"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.258"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.431"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.274"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.283"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.571"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.586"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.441"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.325"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.453"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.402"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.393"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.554"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.287"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.394"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.436"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.011">
    <error message="The step &#039;I want to write a step with name1&#039; and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given(&quot;I want to write a step with name1&quot;)
public void i_want_to_write_a_step_with_name1() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When(&quot;I check for the {int} in step&quot;)
public void i_check_for_the_in_step(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then(&quot;I verify the success in step&quot;)
public void i_verify_the_success_in_step() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
" type="io.cucumber.testng.UndefinedStepException">
      <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'I want to write a step with name1' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@Given("I want to write a step with name1")
public void i_want_to_write_a_step_with_name1() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("I check for the {int} in step")
public void i_check_for_the_in_step(Integer int1) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("I verify the success in step")
public void i_verify_the_success_in_step() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- runScenario -->
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.316"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.393"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.600"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="2.463"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.274"/>
  <testcase classname="Runner.TestRunner" name="runScenario" time="0.579"/>
</testsuite> <!-- Runner.TestRunner -->
